var iSuggester = {

	serverUrl : "", /* Сервер, возвращающий саггесты */
	sypexKeys : ["ypUOZ", "aHS9V", "hS9MH", "HRbLwB", "9y5AP", "e49h7", "yN9yi", "bXJLc", "hs7XQ", "M13Jh"],
	searchBox : null, /* html объект строки поиска */
	suggestionsBox : null, /* div для саггестов */
	suggestions : null, /* Список саггестов */
	activeSuggestion : null, /* Выбранный саггест */
	activeSearch : null, /* Эта вещь поможет нам абортить лишние запросы к серверу */
	userGeolocationData : null, /* Геолокационные данные пользователя */
	userCity : null, /* Город пользователя */
	addressFields : null, /* Список айдишников полей, в которые нужно разобрать адрес*/
	
	init : function(params) { /* Функция инициализирующая саггестор */

		this.searchBox = document.getElementById(params.searchBox); /* Запоминаем строку для ввода адреса */
		this.addressFields = params.addressFields; /* Запоминаем id филдов для разобранного адреса */

		if (this.searchBox == null || this.searchBox == undefined) { /* Проверяем, что у нас правильно инициализировано поле поиска */
			return false;
		}

		this.getUserCityByIP(); /* получаем город пользователя по IP адресу */
		this.getUserGeolocationData(); /* получаем геолокацию пользователя */
	},
	
	getUserGeolocationData : function() { /* Функция получения геопозиции пользователя */
		
	},
	
	setUserGeolocationData : function() { /* Функция сохранения геопозиции пользователя */
		
	},
	
	handleErrorOfGettingUserGeolocationData : function(error) {	/* Функция обработки ошибок получения геопозиции пользователя */
		return false; /* Обработчик ошибок, пока что, нигде не используется */
		switch(error.code) {
			case error.PERMISSION_DENIED:
				alert("Вы отклонили запрос геолокации :( (а жаль, все это могло произойти быстрее)");
				break;
			case error.POSITION_UNAVAILABLE:
				alert("Информация о положении недоступна :(");
				break;
			case error.TIMEOUT:
				alert("Время получения геопозиции истекло :(");
				break;
			case error.UNKNOWN_ERROR:
				alert("При получении геолокации произошла неизвестная ошибка :(");
				break;
		}
	},
	
	getUserCityByIP : function() { /* Функция получения города пользователя по его IP адресу */
		this.sendAjax("http://api.sypexgeo.net/ypUOZ/json", this.setUserCity); /* TODO Решить откуда берем город */
	},

	setUserCity : function(ipData) { /* Функция сохранения города пользователя (полученного по IP) */
		iSuggester.userCity = ipData.city.name_ru;
	},

	sendAjax : function(url, callBack) { /* Асинхронный xhr запрос */
		var ajax = new XMLHttpRequest();
		ajax.open("GET", url);
		ajax.send();

		ajax.onload = function() {
			var response = ajax.responseText;

			if (typeof(response) == "string") { /* Проверяем контент-тайп ответа */
				response = JSON.parse(response);
			}

			if (callBack != null && callBack != undefined) {
				callBack(response); /* Обрабатываем ответ */
			}
		}
	},
	
	buildSuggestionsPlaceholder : function() { /* Создаем плейсхолдер для саггестов */
		
	},
	
	stylingSuggestionsPlaceholder : function() { /* Добавляем стили плейсхолдеру для саггестов */
		
	},

	getSuggestions : function() { /* Получаем саггесты */

	},

	setSuggestions : function() { /* Сохраняем саггесты */

	},
	
	renderSuggestions : function() { /* Отрисовываем саггесты */
		
	},
	
	stylingSuggestions : function() { /* Добавляем стили для саггестов */
		
	},
	
	addUnselectableSuggest : function() { /* Добавляет саггест, который нельзя выбрать ("Выберите вариант или продолжите ввод") */
		
	},

	createDiv : function(attributes) { /* Функция для создания div'a */

	},
	
	setActiveSuggest : function() { /* Функция, срабатывающая при выборе саггеста */
		
	},
	
	handleClickOnSearchBox : function() { /* Функция, срабатывающая при клике мышью в строку поиска */
		
	},
	
	handleKeyPress : function() { /* Обрабатываем нажания кнопок, когда строка поиска в фокусе */
		/*
		
			1. 38 Клацаем стреку "Вверх"			: this.handleUpArrowKeyPress();
			2. 40 Клацаем стреку "Вниз"				: this.handleDownArrowKeyPress();
			3. 13 Клацаем кнопку "Enter"			: this.handleEnterKeyPress();
			4. Вводим буквы/цифры/backspace/delete	: this.handleAddressTyping();
			5. tab, caps lock, shift, ctrl, alt, arrow <- и ->, home, end, pageDown, pageUp, f1-f12, esc
				9, 20, 16, 17, 18, 37, 39, 36, 35, 34, 33, 27, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
		*/
	},
	
	handleUpArrowKeyPress: function() { /* Обрабатываем нажания стрелки "Вверх" */
		
	},
	
	handleDownArrowKeyPress: function() { /* Обрабатываем нажания стрелки "Вниз" */
		
	},
	
	handleEnterKeyPress: function() { /* Обрабатываем нажания кнопки "Enter" */
		
	},
	
	handleAddressTyping : function() { /* Обрабатываем ввод адреса */
		
	},
	
	injectAddress : function() { /* Разбираем адрес по кусочкам */
		
	}
}